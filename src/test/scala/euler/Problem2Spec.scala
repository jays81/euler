package euler

import org.scalatest.{FlatSpec, Matchers}

/**
  * Created by jay on 26/05/16.
  * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
  * By starting with 1 and 2, the first 10 terms will be:
  * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
  * find the sum of the even-valued terms.
  */
class Problem2Spec extends FlatSpec with Matchers {

  "Problem2" should "generate the first 10 terms fibonacci sequence" in {
    val problem2 = new Problem2

    val result = problem2.generateFibonacci(1,2,10)

    result shouldBe Seq(1,2,3,5,8,13,21,34,55,89)
  }

  it should "generate the sum of even value terms which do not exceed 4 million" in {
    val problem2 = new Problem2

    val result = problem2.generateSumOfEvenValueFibonacciTerms(1,2, 4000000)

    result shouldBe 4613732
  }

}
